/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.9.7")
    }
}
// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
//apply plugin: 'maven'
apply plugin: 'net.serenity-bdd.aggregator'
// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
}
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'net.serenity-bdd:serenity-core:1.9.7'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.4'
    testImplementation('junit:junit:4.12')
    testImplementation 'org.assertj:assertj-core:3.9.1'
    implementation group: 'org.testng', name: 'testng', version:'6.10'
    implementation('com.googlecode.lambdaj:lambdaj:2.3.3')
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.10.0'
    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.0.5.RELEASE'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    // https://mvnrepository.com/artifact/io.appium/java-client
    implementation group: 'io.appium', name: 'java-client', version: '4.1.2'
    implementation group: 'com.goebl', name: 'david-webb', version: '1.3.0'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
gradle.startParameter.continueOnFailure = true
task download (type: Exec) {
    configurations.testCompileClasspath.files
    commandLine 'echo', 'Downloaded all dependencies'
}
tasks.withType(Test) {
    systemProperties(System.getProperties())
    reports.junitXml.enabled = false
    reports.html.enabled = false
//    maxParallelForks = Runtime.runtime.availableProcessors()
}
task smokeTest(type: Test){
    systemProperty("cucumber.options", "--tags @smokeTest")
    systemProperty("java.awt.headless", "false")
}
task regressionTest(type: Test){
    systemProperty("cucumber.options", "--tags @regressionTest")
    systemProperty("java.awt.headless", "false")
}